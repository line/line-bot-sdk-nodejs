/**
 * Mission Stickers API
 * This document describes LINE Mission Stickers API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable:no-unused-locals */
import { MissionStickerRequest } from "../model/missionStickerRequest";

import * as Types from "../../types";
import { ensureJSON } from "../../utils";
import { Readable } from "node:stream";

import HTTPFetchClient, { convertResponseToReadable } from "../../http-fetch";

// ===============================================
// This file is autogenerated - Please do not edit
// ===============================================

interface httpClientConfig {
  baseURL?: string;
  channelAccessToken: string;
  // TODO support defaultHeaders?
}

export class ShopClient {
  private httpClient: HTTPFetchClient;

  constructor(config: httpClientConfig) {
    if (!config.baseURL) {
      config.baseURL = "https://api.line.me";
    }
    this.httpClient = new HTTPFetchClient({
      defaultHeaders: {
        Authorization: "Bearer " + config.channelAccessToken,
      },
      baseURL: config.baseURL,
    });
  }

  private async parseHTTPResponse(response: Response) {
    const { LINE_REQUEST_ID_HTTP_HEADER_NAME } = Types;
    let resBody: Record<string, any> = {
      ...(await response.json()),
    };
    if (response.headers.get(LINE_REQUEST_ID_HTTP_HEADER_NAME)) {
      resBody[LINE_REQUEST_ID_HTTP_HEADER_NAME] = response.headers.get(
        LINE_REQUEST_ID_HTTP_HEADER_NAME,
      );
    }
    return resBody;
  }

  /**
   * Sends a mission sticker.
   * @param missionStickerRequest
   *
   * @see <a href="https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3"> Documentation</a>
   */
  public async missionStickerV3(
    missionStickerRequest: MissionStickerRequest,
  ): Promise<Types.MessageAPIResponseBase> {
    return (await this.missionStickerV3WithHttpInfo(missionStickerRequest))
      .body;
  }

  /**
   * Sends a mission sticker..
   * This method includes HttpInfo object to return additional information.
   * @param missionStickerRequest
   *
   * @see <a href="https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3"> Documentation</a>
   */
  public async missionStickerV3WithHttpInfo(
    missionStickerRequest: MissionStickerRequest,
  ): Promise<Types.ApiResponseType<Types.MessageAPIResponseBase>> {
    const params = missionStickerRequest;

    const res = await this.httpClient.post("/shop/v3/mission", params);
    return { httpResponse: res, body: await res.json() };
  }
}
