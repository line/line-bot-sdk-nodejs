{# @pebvariable name="imports" type="java.util.List<java.util.Map<String, String>>" #}
{# @pebvariable name="operations" type="org.openapitools.codegen.model.OperationMap" #}
{% include "./licenseInfo.pebble" %}

/* tslint:disable:no-unused-locals */
{% for import in imports -%}
import { {{import.classname}} } from '{{import.filename}}';
{% endfor %}
import * as Types from "../../types";
import {ensureJSON} from "../../utils";
import {Readable} from "stream";

import HTTPClient from "../../http";

const pkg = require("../../../package.json");

// ===============================================
// This file is autogenerated - Please do not edit
// ===============================================

interface httpClientConfig {
    baseURL?: string;
    channelAccessToken: string;
    // TODO support defaultHeaders?
}


export class {{operations.classname}} {
    private config: httpClientConfig;

    constructor(config: httpClientConfig) {
        this.config = {
            "baseURL": "{{endpoint(operations.classname)}}",
            ...config
        }
    }

{% for op in operations.operation -%}
    /**
     * {{op.notes}}
    {% if op.summary -%}
     * @summary {{op.summary}}
    {% endif -%}
    {% for param in op.allParams -%}
     * @param {{param.paramName}} {{param.description}}
    {% endfor -%}
    {% if op.isDeprecated -%}
     * @deprecated
    {% endif -%}
    {% if op.externalDocs != null -%}
     * {{op.externalDocs.description}}
     * @see <a href="{{op.externalDocs.url}}">{{op.summary}} Documentation</a>
    {% endif -%}
     */
    public async {{op.nickname}}({% for param in op.allParams %}{{param.paramName}}{% if not param.required %}?{% endif %}: {{param.dataType}}, {% endfor %}) : Promise<{% if op.returnType %}{{ op.returnType }}{% else %}Types.MessageAPIResponseBase{% endif %}> {
        {% include "./apiBody/normal.pebble" %}
    }
{% endfor %}
}
